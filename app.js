
/* Straordinari v5.4.4: EU dates + CORS-safe sync + Diagnostica */
const LS_KEY='workdays_v1',CFG_KEY='workcfg_v5_4',OUTBOX_KEY='work_outbox_v1';
const DEFAULT_ENDPOINT='https://script.google.com/macros/s/AKfycbz_wa8fNCFNmfu2hRtMJ3nQi1oJ0e1biK2-9yRmW_U8fZMS414E62z5ae3qipJ9ii3R/exec';
const APP_VER='5.4.4';

const $=(s,e=document)=>e.querySelector(s),$$=(s,e=document)=>[...e.querySelectorAll(s)];

function todayLocalISO(){const d=new Date();return[d.getFullYear(),String(d.getMonth()+1).padStart(2,'0'),String(d.getDate()).padStart(2,'0')].join('-');}
function minutesFromHHMM(h){const[a,b]=h.split(':').map(Number);return a*60+b}
function hhmmFromMinutes(m){const h=Math.floor(m/60),n=m%60;return`${String(h).padStart(2,'0')}:${String(n).padStart(2,'0')}`}
function nowHHMM(){const d=new Date();return`${String(d.getHours()).padStart(2,'0')}:${String(d.getMinutes()).padStart(2,'0')}`}
function parseLS(){try{return JSON.parse(localStorage.getItem(LS_KEY))||{}}catch{return {}}}
function saveLS(o){localStorage.setItem(LS_KEY,JSON.stringify(o))}
function parseCFG(){try{return JSON.parse(localStorage.getItem(CFG_KEY))||{}}catch{return {}}}
function saveCFG(c){localStorage.setItem(CFG_KEY,JSON.stringify(c))}
function parseOutbox(){try{return JSON.parse(localStorage.getItem(OUTBOX_KEY))||[]}catch{return []}}
function saveOutbox(a){localStorage.setItem(OUTBOX_KEY,JSON.stringify(a))}
function toast(m){const t=$('#toast');t.textContent=m;t.classList.add('show');setTimeout(()=>t.classList.remove('show'),1600)}

function toEU(iso){if(!iso)return'';const [Y,M,D]=iso.split('-');return `${D}-${M}-${Y}`}
function weekdayName(d){return['Dom','Lun','Mar','Mer','Gio','Ven','Sab'][d]}

function ensureDay(d){const data=parseLS();if(!data[d])data[d]={start:null,breakStart:null,breakEnd:null,end:null,finalized:false,updatedAt:Date.now()};const cfg=parseCFG();const s=cfg.startFixed||'08:00';if(!data[d].start)data[d].start=s;data[d].updatedAt=Date.now();saveLS(data)}
function finalizePastDays(){const data=parseLS();const cfg=parseCFG();const bs=cfg.defBreakStart||'12:30',be=cfg.defBreakEnd||'14:00',en=cfg.defEnd||'17:30';const t=todayLocalISO();let ch=false;Object.keys(data).forEach(k=>{if(k<t&&!data[k].finalized){const day=data[k];if(!day.breakStart)day.breakStart=bs;if(!day.breakEnd)day.breakEnd=be;if(!day.end)day.end=en;day.finalized=true;day.updatedAt=Date.now();queueOutbox(k,day);ch=true}});if(ch)saveLS(data)}
function computeNetDay(d){if(!(d.start&&d.breakStart&&d.breakEnd&&d.end))return null;return(minutesFromHHMM(d.breakStart)-minutesFromHHMM(d.start))+(minutesFromHHMM(d.end)-minutesFromHHMM(d.breakEnd))}
function computeExtra(d){const n=computeNetDay(d);if(n===null)return null;return n-480}

function updateOggiUI(){const data=parseLS();const t=todayLocalISO();ensureDay(t);const day=data[t];$('#startTime').textContent=day.start||'08:00';$('#breakStartTime').textContent=day.breakStart||'—';$('#breakEndTime').textContent=day.breakEnd||'—';$('#endTime').textContent=day.end||'—';let next='breakStart';if(day.breakStart&&!day.breakEnd)next='breakEnd';else if(day.breakStart&&day.breakEnd&&!day.end)next='end';else if(day.breakStart&&day.breakEnd&&day.end)next='end';$('#azione').value=next;const{start,breakStart:bs,breakEnd:be,end}=day;const card=$('#oggiSummary');if(start&&bs&&be&&end){const net=(minutesFromHHMM(bs)-minutesFromHHMM(start))+(minutesFromHHMM(end)-minutesFromHHMM(be));$('#oggiNet').textContent=`Lavoro netto: ${hhmmFromMinutes(net)} (prima ${start}–${bs} + dopo ${be}–${end})`;const extra=net-480;const s=extra>=0?'+':'−';$('#oggiExtra').textContent=`Straordinario oggi: ${s}${hhmmFromMinutes(Math.abs(extra))}`;card.hidden=false}else card.hidden=true}

function recordAction(){const field=$('#azione').value;const data=parseLS();const t=todayLocalISO();ensureDay(t);const day=data[t];const now=nowHHMM();if(day[field]){if(!confirm(`La voce è già impostata su ${day[field]}. Vuoi sovrascrivere con ${now}?`))return}day[field]=now;day.updatedAt=Date.now();saveLS(data);queueOutbox(t,day);if(field==='breakStart')$('#azione').value='breakEnd';if(field==='breakEnd')$('#azione').value='end';updateOggiUI();toast('Registrato');trySync()}

const picker={field:null,date:null};function buildPickerOptions(){const h=$('#pickHour'),m=$('#pickMin');if(h.options.length===0){for(let i=0;i<24;i++){const o=document.createElement('option');o.value=String(i).padStart(2,'0');o.textContent=o.value;h.appendChild(o)}}if(m.options.length===0){for(let i=0;i<60;i++){const o=document.createElement('option');o.value=String(i).padStart(2,'0');o.textContent=o.value;m.appendChild(o)}}h.addEventListener('change',updatePickerReadout);m.addEventListener('change',updatePickerReadout)}
function updatePickerReadout(){const hh=$('#pickHour')?.value||'00',mm=$('#pickMin')?.value||'00';const r=$('#pickerReadout');if(r)r.textContent=`${hh}:${mm}`}
function openPicker(dateISO,field,presetHHMM){picker.field=field;picker.date=dateISO;buildPickerOptions();const[ph,pm]=(presetHHMM||'08:00').split(':');$('#pickHour').value=ph;$('#pickMin').value=pm;updatePickerReadout();$('#modalPicker').classList.add('show');$('#modalPicker').setAttribute('aria-hidden','false')}
function closePicker(){$('#modalPicker').classList.remove('show');$('#modalPicker').setAttribute('aria-hidden','true')}
function applyPicker(){const hh=$('#pickHour').value,mm=$('#pickMin').value;const t=`${hh}:${mm}`;const data=parseLS();ensureDay(picker.date);const day=data[picker.date];day[picker.field]=t;day.updatedAt=Date.now();saveLS(data);queueOutbox(picker.date,day);closePicker();if(picker.date===todayLocalISO())updateOggiUI();updateRecentiUI();updateTotaleUI();toast('Orario aggiornato');trySync()}

let cloudCache=null;async function fetchCloudLast(days=90){const cfg=parseCFG();if(!cfg.syncEnabled||!cfg.syncUrl)return null;const headers={};if(cfg.syncToken)headers['X-Auth']=cfg.syncToken;const r=await fetch(cfg.syncUrl+`?op=last&days=${days}`,{headers});if(!r.ok)throw new Error('HTTP '+r.status);const arr=await r.json();const map={};if(Array.isArray(arr)){for(const a of arr){map[a.date]={start:a.start||null,breakStart:a.breakStart||null,breakEnd:a.breakEnd||null,end:a.end||null,finalized:!!a.finalized}}}return map}

async function updateRecentiUI(){const list=$('#recentiList');list.innerHTML='';const d=new Date();const y=d.getFullYear(),m=d.getMonth()+1;const totalDays=new Date(y,m,0).getDate();try{cloudCache=await fetchCloudLast(90)}catch(e){cloudCache=null}const local=parseLS();for(let i=1;i<=totalDays;i++){const iso=`${y}-${String(m).padStart(2,'0')}-${String(i).padStart(2,'0')}`;const wd=new Date(iso+'T00:00:00').getDay();const rec=(cloudCache&&cloudCache[iso])||local[iso]||{};const extra=computeExtra(rec);const extraStr=(extra===null)?'—':`${extra>=0?'+':'−'}${hhmmFromMinutes(Math.abs(extra))}`;const el=document.createElement('div');el.className='item'+((wd===0||wd===6)?' weekend':'');el.innerHTML=`<div class="muted">${toEU(iso)} ${weekdayName(wd)}</div><div class="extra">${extraStr}</div><button class="editbtn" data-date="${iso}">Modifica</button>`;el.addEventListener('click',ev=>{if(ev.target&&ev.target.classList.contains('editbtn'))return;openDayDetail(iso)});el.querySelector('.editbtn').addEventListener('click',ev=>{ev.stopPropagation();openDayDetail(iso)});list.appendChild(el)}}

function renderDayRows(dateISO){const data=((cloudCache&&cloudCache[dateISO])||parseLS()[dateISO]||{});const host=$('#dayRows');host.innerHTML='';[['start','Inizio lavoro',data.start||'—'],['breakStart','Inizio pausa',data.breakStart||'—'],['breakEnd','Fine pausa',data.breakEnd||'—'],['end','Uscita',data.end||'—']].forEach(([f,l,v])=>{const r=document.createElement('div');r.className='row';const t=document.createElement('div');t.className='time';t.textContent=v;const left=document.createElement('div');left.textContent=l;const b=document.createElement('button');b.className='btn ghost';b.textContent='Modifica';b.addEventListener('click',()=>{const preset=(v&&v.includes(':'))?v:(f==='start'?(parseCFG().startFixed||'08:00'):'12:00');openPicker(dateISO,f,preset)});r.appendChild(left);r.appendChild(t);r.appendChild(b);host.appendChild(r)})}
function openDayDetail(d){$('#dayTitle').textContent=`Giornata ${toEU(d)}`;renderDayRows(d);$('#modalDay').classList.add('show');$('#modalDay').setAttribute('aria-hidden','false')}
function closeDayDetail(){$('#modalDay').classList.remove('show');$('#modalDay').setAttribute('aria-hidden','true')}

function ymCurrent(){const d=new Date();return`${d.getFullYear()}-${String(d.getMonth()+1).padStart(2,'0')}`}
function sumMonthLocal(ym){const data=parseLS();let tot=0;for(const k of Object.keys(data)){if(k.startsWith(ym)){const e=computeExtra(data[k]);if(e!==null)tot+=e}}return tot}
async function monthTotalFromCloud(ym){const cfg=parseCFG();if(!cfg.syncEnabled||!cfg.syncUrl)return null;const headers={};if(cfg.syncToken)headers['X-Auth']=cfg.syncToken;const r=await fetch(`${cfg.syncUrl}?op=month&ym=${encodeURIComponent(ym)}`,{headers});if(!r.ok)throw new Error('HTTP '+r.status);const js=await r.json();return(js&&typeof js.totalExtraMinutes==='number')?js.totalExtraMinutes:null}
async function updateTotaleUI(){const ym=ymCurrent();let total=null;try{total=await monthTotalFromCloud(ym)}catch(e){}if(total===null)total=sumMonthLocal(ym);const s=total>=0?'+':'−';$('#bigTotal').textContent=`${s}${hhmmFromMinutes(Math.abs(total))}`}

function queueOutbox(dateISO,day){const out=parseOutbox();const idx=out.findIndex(x=>x.date===dateISO);const item={date:dateISO,day:{start:day.start||null,breakStart:day.breakStart||null,breakEnd:day.breakEnd||null,end:day.end||null,finalized:!!day.finalized},tzOffsetMinutes:new Date().getTimezoneOffset()*-1,deviceTimestamp:Date.now()};if(idx>=0)out[idx]=item;else out.push(item);saveOutbox(out)}

async function trySync(){const cfg=parseCFG();if(!cfg.syncEnabled||!cfg.syncUrl)return;if(!navigator.onLine){toast('Offline: sync rimandata');return}const out=parseOutbox();if(out.length===0){toast('Niente da sincronizzare');return}try{let ok=0;for(const it of out){const headers={'Content-Type':'text/plain;charset=utf-8'};if(cfg.syncToken)headers['X-Auth']=cfg.syncToken;const r=await fetch(cfg.syncUrl,{method:'POST',headers,body:JSON.stringify({op:'upsert',payload:it})});if(!r.ok){const txt=await r.text();throw new Error('HTTP '+r.status+' '+txt.slice(0,120))}const js=await r.json();if(js&&js.status==='ok')ok++}if(ok===out.length){saveOutbox([]);toast('Sync completata');updateDiagnostics()}}catch(e){console.warn('Sync error',e);toast('Sync fallita');updateDiagnostics(String(e))}}

function initTabs(){$$('.tab').forEach(b=>{b.addEventListener('click',()=>{$$('.tab').forEach(x=>x.classList.remove('active'));b.classList.add('active');const t=b.getAttribute('data-target');$$('.page').forEach(p=>p.classList.remove('visible'));$('#'+t).classList.add('visible');if(t==='page-recenti')updateRecentiUI();if(t==='page-totale')updateTotaleUI()})})}

function eagerSetup(){if(!localStorage.getItem(CFG_KEY)){saveCFG({startFixed:'08:00',defBreakStart:'12:30',defBreakEnd:'14:00',defEnd:'17:30',syncEnabled:true,syncUrl:DEFAULT_ENDPOINT,syncToken:''})}else{const cfg=parseCFG();if(!cfg.syncUrl||cfg.syncUrl!==DEFAULT_ENDPOINT){cfg.syncUrl=DEFAULT_ENDPOINT;cfg.syncEnabled=true;cfg.migratedEndpoint=APP_VER;saveCFG(cfg)}}finalizePastDays();ensureDay(todayLocalISO());updateOggiUI();updateTotaleUI();}

function loadSettingsUI(){const cfg=parseCFG();$('#cfgSyncEnabled').checked=!!cfg.syncEnabled;$('#cfgSyncUrl').value=cfg.syncUrl||'';$('#cfgSyncToken').value=cfg.syncToken||'';updateDiagnostics()}
function saveSettings(){const cfg=parseCFG();cfg.syncEnabled=$('#cfgSyncEnabled').checked;cfg.syncUrl=$('#cfgSyncUrl').value.trim();cfg.syncToken=$('#cfgSyncToken').value.trim();saveCFG(cfg);toast('Impostazioni salvate');updateDiagnostics()}
function updateDiagnostics(err){const cfg=parseCFG();const out=parseOutbox();const lines=[`Versione app: ${APP_VER}`,`Online: ${navigator.onLine}`,`Endpoint: ${cfg.syncUrl||'(vuoto)'}`,`Token: ${cfg.syncToken?('***('+cfg.syncToken.length+' car.)'):'(vuoto)'}`,`Outbox: ${out.length} elementi`];if(err)lines.push('Ultimo errore: '+err);const box=$('#diagStatus');if(box)box.textContent=lines.join('\\n')}
async function testEndpoint(){const cfg=parseCFG();const res={};try{const r1=await fetch(cfg.syncUrl+`?op=ping`);res.ping=await r1.text()}catch(e){res.ping='ERRORE: '+String(e)}const ym=ymCurrent();try{const r2=await fetch(cfg.syncUrl+`?op=month&ym=${encodeURIComponent(ym)}`);res.month=await r2.text()}catch(e){res.month='ERRORE: '+String(e)}const box=$('#diagStatus');box.textContent += `\\n\\nTest endpoint:\\nPING -> ${res.ping}\\nMONTH -> ${res.month}`}

document.addEventListener('DOMContentLoaded',()=>{initTabs();eagerSetup();$('#btnRegistra').addEventListener('click',recordAction);$('#btnSettings').addEventListener('click',()=>{loadSettingsUI();$('#modalSettings').classList.add('show');$('#modalSettings').setAttribute('aria-hidden','false')});$('#btnSettingsSave').addEventListener('click',()=>{saveSettings()});$('#btnSettingsSync').addEventListener('click',()=>{saveSettings();let out=parseOutbox();if(out.length===0){const t=todayLocalISO();const data=parseLS();if(data&&data[t])queueOutbox(t,data[t])}out=parseOutbox();if(out.length===0){toast('Niente da sincronizzare');return}toast('Sync avviata');trySync()});$('#btnSettingsClose').addEventListener('click',()=>{$('#modalSettings').classList.remove('show');$('#modalSettings').setAttribute('aria-hidden','true')});$('#modalSettings').addEventListener('click',(e)=>{if(e.target.id==='modalSettings'){ $('#modalSettings').classList.remove('show'); $('#modalSettings').setAttribute('aria-hidden','true'); }});$$('#rowsOggi .btn.ghost').forEach(btn=>{btn.addEventListener('click',()=>{const f=btn.getAttribute('data-edit');const t=todayLocalISO();const d=parseLS()[t]||{};const cur=(d[f]&&d[f].includes(':'))?d[f]:(f==='start'?(parseCFG().startFixed||'08:00'):'12:00');openPicker(t,f,cur)});});$('#btnPickerOk').addEventListener('click',applyPicker);$('#btnPickerCancel').addEventListener('click',closePicker);$('#btnDayClose').addEventListener('click',()=>{ closeDayDetail(); updateRecentiUI(); });$('#modalDay').addEventListener('click',(e)=>{ if(e.target.id==='modalDay'){ closeDayDetail(); updateRecentiUI(); } });$('#btnVerificaMesi').addEventListener('click',openMonthPicker);$('#btnMonthOk').addEventListener('click',confirmMonthPicker);$('#btnMonthCancel').addEventListener('click',closeMonthPicker);$('#modalMonth').addEventListener('click',(e)=>{ if(e.target.id==='modalMonth'){ closeMonthPicker(); } });$('#btnSyncNowTop').addEventListener('click',()=>{ let out=parseOutbox(); if(out.length===0){ const t=todayLocalISO(); const data=parseLS(); if(data&&data[t]) queueOutbox(t,data[t]); } out=parseOutbox(); if(out.length===0){ toast('Niente da sincronizzare'); return; } toast('Sync avviata'); trySync(); updateRecentiUI(); });$('#btnDiagRefresh').addEventListener('click',()=>updateDiagnostics());$('#btnDiagTest').addEventListener('click',()=>testEndpoint());window.addEventListener('online',trySync);});

document.addEventListener('click',(e)=>{ if(e.target&&e.target.id==='btnMonthResultClose'){ $('#modalMonthResult').classList.remove('show'); $('#modalMonthResult').setAttribute('aria-hidden','true'); } });
